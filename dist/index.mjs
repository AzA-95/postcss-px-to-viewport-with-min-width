import{AtRule as e,Rule as n,Declaration as t}from"postcss";const r=e=>Array.isArray(e),o=e=>e instanceof RegExp,s=(e,n)=>{if(!o(e))throw new Error("options.exclude should be RegExp.");return null!==n.match(e)},a=e=>"keyframes"===e,p=e=>-1!==e.indexOf("min-width")&&-1===e.indexOf("max-width"),c=e=>-1!==e.indexOf("(max-width:"),i=(e,n)=>{const t=10**(n+1),r=Math.floor(e*t);return 10*Math.round(r/10)/t},u=e=>(n,t)=>{if(!t)return n;const{minUnitValue:r,convertToUnit:o,viewportWidth:s,unitPrecision:a,unitWidthCssVar:p}=e,c=parseFloat(t);if(void 0!==r&&r>=c)return n;const u=i(c/s*100,a);return 0===u?"0":p?`calc(${u} * ${p})`:`${u}${o}`},l=(e,n,t)=>e?.some((e=>"decl"===e.type&&(e.prop===n&&e.value===t))),d=(e,n)=>e.some((e=>"string"==typeof e?-1!==n.indexOf(e):n.match(e))),m=({selectors:e,source:t})=>new n({selectors:e,source:t}),f=({name:n,params:t,source:r})=>new e({name:n,params:t,source:r}),h=({prop:e,value:n,important:r})=>new t({prop:e,value:n,important:r}),v=(e,n)=>{const t=(r=n.unitToConvert,new RegExp(`"[^"]+"|'[^']+'|url\\([^\\)]+\\)|(\\-?\\d*\\.?\\d+)${r}`,"g"));var r;if(-1===e.value.indexOf(n.unitToConvert))return null;const o=e.prev();if(o&&"comment"===o.type&&"px-to-viewport-ignore-next"===o.text)return o.remove(),null;const s=e.value.replace(t,u(n));return l(e.parent.nodes,e.prop,s)?null:h({prop:e.prop,value:s,important:e.important})},x=(e,n)=>{const t=[];if(e.selectors.forEach((e=>{d(n.selectorBlackList,e)||t.push(e)})),0===t.length)return null;const r=m({selectors:t,source:e.source});return e.walkDecls((e=>{const t=v(e,n);t&&r.append(t)})),r.nodes?.length>0?r:null},w=(e,n)=>{let t=!1;const r=e.clone().removeAll();return e.each((e=>{const o=x(e,n);if(o)return t=!0,void r.append(o);r.append(e.clone())})),t?r:null},g=e=>{const n=e.clone(),t=e=>{if(e.nodes){let n=e.nodes.length;for(;n--;){const r=e.nodes[n];"atrule"===r.type&&(t(r),r.nodes&&0!==r.nodes.length||r.remove())}}};return t(n),n.nodes&&n.nodes.length>0?n:null},y=(e,n,t)=>(e&&e.length>0&&e.forEach((e=>{if("atrule"===e.type&&!c(e.params)){if(p(e.params))return void y(e.nodes,n,t);if(a(e.name)){const r=w(e,t);return void(r&&n.append(r))}const r=f({name:e.name,params:e.params,source:e.source});n.append(r),y(e.nodes,r,t)}if("rule"===e.type){const r=x(e,t);r&&n.append(r)}})),n),E={unitPrecision:4,unitToConvert:"px",convertToUnit:"vw",viewportWidth:1280,selectorBlackList:[]},$=e=>{const n={...E,...e};let t=[],i=[];const u=e=>{i.push(e)},l=e=>{const r=x(e,n);r&&t.push(r)},d=e=>{const t=f({name:e.name,params:e.params,source:e.source}),r=y(e.nodes,t,n),o=g(r);o&&u(o)};return{postcssPlugin:"postcss-px-to-vw",Once(e){const{exclude:m}=n,h=e.source?.input.file||null;if(m&&h){if(!o(m)&&!r(m))throw new Error("options.exclude should be RegExp or Array of RegExp.");{const e=r(m)?m:[m];for(let n=0;n<e.length;n++)if(s(e[n],h))return}}e.each((e=>{if("atrule"===e.type&&(t=e.name,["media","supports","keyframes"].includes(t))&&!c(e.params)){if(a(e.name)){const t=w(e,n);return void(t&&u(t))}return p(e.params)?void e.each((e=>{"rule"!==e.type?"atrule"===e.type&&d(e):l(e)})):void d(e)}var t;"rule"===e.type&&l(e)}));const v=f({name:"media",params:`(min-width: ${n.viewportWidth}${n.unitToConvert})`,source:e.source});t.forEach((e=>{v.append(e)})),i.forEach((e=>{v.append(e)})),v.nodes&&v.nodes.length>0&&e.append(v),t=[],i=[]}}};$.postcss=!0;export{$ as default};
